[package]
name = "laylay-client"
version.workspace = true
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
crate-type = ["cdylib", "rlib"]

[package.metadata.android]
package = "com.laylay.client"
build_targets = [
    # "armv7-linux-androideabi", 
    "aarch64-linux-android",
    # "i686-linux-android",
    # "x86_64-linux-android"
]
# resources = "path/to/resources_folder"
assets = "assets"
apk_name = "laylay"
strip = "default"

[package.metadata.android.sdk]
min_sdk_version = 23
target_sdk_version = 30
max_sdk_version = 29

# See https://developer.android.com/guide/topics/manifest/uses-feature-element
#
# Note: there can be multiple .uses_feature entries.
[[package.metadata.android.uses_feature]]
name = "android.hardware.vulkan.level"
required = true
version = 1

# See https://developer.android.com/guide/topics/manifest/uses-permission-element
#
# Note: there can be multiple .uses_permission entries.
[[package.metadata.android.uses_permission]]
name = "android.permission.WRITE_EXTERNAL_STORAGE"
max_sdk_version = 18

# See https://developer.android.com/guide/topics/manifest/queries-element#provider
[[package.metadata.android.queries.provider]]
authorities = "org.khronos.openxr.runtime_broker;org.khronos.openxr.system_runtime_broker"
# Note: The `name` attribute is normally not required for a queries provider, but is non-optional
# as a workaround for aapt throwing errors about missing `android:name` attribute.
# This will be made optional if/when cargo-apk migrates to aapt2.
name = "org.khronos.openxr"

[dependencies]
bytemuck = { version = "1.16.0", features = ["derive"] }
gltf = "1.4.1"
mlua = { version = "0.9.8", features = ["lua54", "parking_lot", "vendored"] }
openxr = "0.18.0"
tokio = { version = "1.38.0", features = ["full"] }
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
wgpu = "0.20.0"
laylay-common = { path = "../laylay-common" }

[target.'cfg(not(target_os = "android"))'.dependencies]
winit = "0.30.0"

[target.'cfg(target_os = "android")'.dependencies]
winit = { version = "0.30.0", features = ["android-native-activity"] }
